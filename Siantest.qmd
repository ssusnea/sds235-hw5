---
title: "siantest"
format: html
---

```{r}
library(tidyverse)

damage_report <- read_csv("hw05-data/Damage Reports/mc1-reports-data.csv")

mobile_sensor <- read_csv("hw05-data/Sensor Data and Maps/MobileSensorReadings.csv")



yint <- read_csv("hw05-data/Yint Social Media Data/Yint.csv")
```


```{r}
library(sf)

# read in the data: 
himark <- st_read("hw05-data/Sensor Data and Maps/StHimarkNeighborhoodShapefiles/StHimark.shp")

library(ggplot2)


#custom_crs <- "+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs"


sensor_sf <- st_as_sf(static_sensor_location, coords = c("Long", "Lat"), crs = 4326)
st_as_sf(himark, 4326)

ggplot() +
  geom_sf(data = sthimark, size = 1.5, color = "black", fill = "light grey") + 
  geom_sf(data = sensor_sf, size = 2)

  
```



FINAL VERSION BELOW
```{r}
library(dplyr)
library(tidyverse)

#reads in data
static_sensor_location <- read_csv("hw05-data/Sensor Data and Maps/StaticSensorLocations.csv")
static_sensor_reading <- read_csv("hw05-data/Sensor Data and Maps/StaticSensorReadings.csv")

#renaming sensorid col
static_sensor_reading <- rename(static_sensor_reading, sensor_id = 'Sensor-id')
static_sensor_location <- rename(static_sensor_location, sensor_id = 'Sensor-id')

#changes date formatting
static_sensor_reading$Timestamp <- as.POSIXct(static_sensor_reading$Timestamp)
static_sensor_reading$Timestamp <- format(static_sensor_reading$Timestamp,"%Y-%m-%d %H")


#makes it so dataframe is by hour instead of min/sec
complete_static <- static_sensor_reading |>
  group_by(Timestamp, sensor_id) |>
  summarize(avg_value = mean(Value)) |>
  ungroup()
  
#joins reading and location col into one sensor dataframe
complete_static <- inner_join(static_sensor_location, complete_static, by = "sensor_id")
```

```{r}
#creates figure using shapefile
library(plotly)

himark <- st_read("hw05-data/Sensor Data and Maps/StHimarkNeighborhoodShapefiles/StHimark.shp")
sensor_sf <- st_as_sf(complete_static, coords = c("Long", "Lat"), crs = 4326)
st_as_sf(himark, 4326)


g <- ggplot() +
  geom_sf(data = sthimark, size = 1.5, color = "black", fill = "light grey") + 
  geom_sf(data = sensor_sf, aes(frame = Timestamp, size = avg_value, fill = avg_value))


fig <- ggplotly(g, tooltip = c("sensor_id", "avg_value", "Timestamp"))  |>
  plotly_build()


fig
```


